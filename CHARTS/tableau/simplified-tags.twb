<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0327.0758                               -->
<workbook source-build='10.1.7 (10100.17.0327.0758)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='simplified-types' inline='true' name='federated.0k3x6gt1ngsolu1f1grie0n65h6h' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='simplified-types' name='textscan.1i55c3z0qd7o7p1ghbkxm1me7tmj'>
            <connection class='textscan' directory='/Users/lawrence/Desktop/archive/2013-2015UVic/MASTERS-ESSAY/SPREADSHEETS' filename='simplified-types.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1i55c3z0qd7o7p1ghbkxm1me7tmj' name='simplified-types.csv' table='[simplified-types#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='gothic type' ordinal='0' />
            <column datatype='integer' name='total f' ordinal='1' />
            <column datatype='integer' name='total m' ordinal='2' />
            <column datatype='integer' name='total unk' ordinal='3' />
            <column datatype='integer' name='total total' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>gothic type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gothic type]</local-name>
            <parent-name>[simplified-types.csv]</parent-name>
            <remote-alias>gothic type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total f</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total f]</local-name>
            <parent-name>[simplified-types.csv]</parent-name>
            <remote-alias>total f</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total m</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total m]</local-name>
            <parent-name>[simplified-types.csv]</parent-name>
            <remote-alias>total m</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total unk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total unk]</local-name>
            <parent-name>[simplified-types.csv]</parent-name>
            <remote-alias>total unk</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total total]</local-name>
            <parent-name>[simplified-types.csv]</parent-name>
            <remote-alias>total total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[simplified-types.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='All Total' datatype='integer' name='[Calculation_10344272412667906]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total m]+[total f]+[total unk]' />
      </column>
      <column caption='Type (identical groups)' datatype='string' name='[Gothic Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[gothic type]' new-bin='true'>
          <bin default-name='true' value='&quot;chapbook &amp; Chapbook&quot;'>
            <value>&quot;chapbook&quot;</value>
            <value>&quot;Chapbook&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;CharlotteSmith, CharlotteSmiths, Reeve and 4 more&quot;'>
            <value>&quot;CharlotteSmith&quot;</value>
            <value>&quot;CharlotteSmiths&quot;</value>
            <value>&quot;Reeve&quot;</value>
            <value>&quot;Reeves&quot;</value>
            <value>&quot;Schauerromantik&quot;</value>
            <value>&quot;Shauerromantik&quot;</value>
            <value>&quot;Smiths&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;didactic &amp; didactit&quot;'>
            <value>&quot;didactic&quot;</value>
            <value>&quot;didactit&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;German &amp; Germanic&quot;'>
            <value>&quot;German&quot;</value>
            <value>&quot;Germanic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Godwin &amp; Godwins&quot;'>
            <value>&quot;Godwin&quot;</value>
            <value>&quot;Godwins&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;historical &amp; history&quot;'>
            <value>&quot;historical&quot;</value>
            <value>&quot;history&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;ideas &amp; Ideas&quot;'>
            <value>&quot;ideas&quot;</value>
            <value>&quot;Ideas&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Mrs.Radcliffe &amp; Mrs.Radcliffes&quot;'>
            <value>&quot;Mrs.Radcliffe&quot;</value>
            <value>&quot;Mrs.Radcliffes&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;noir &amp; Noir&quot;'>
            <value>&quot;noir&quot;</value>
            <value>&quot;Noir&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;nouvella &amp; novella&quot;'>
            <value>&quot;nouvella&quot;</value>
            <value>&quot;novella&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;pseudohistorical &amp; pseudohistory&quot;'>
            <value>&quot;pseudohistorical&quot;</value>
            <value>&quot;pseudohistory&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Rauberroman, Raüberroman, Rauberromantik&quot;'>
            <value>&quot;Rauberroman&quot;</value>
            <value>&quot;Raüberroman&quot;</value>
            <value>&quot;Rauberromantik&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Schocker &amp; Shocker&quot;'>
            <value>&quot;Schocker&quot;</value>
            <value>&quot;Shocker&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Type (rough groups)' datatype='string' name='[Type (identical groups) (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[gothic type]' new-bin='true'>
          <bin default-name='true' value='&quot;abridgement, based, from and 8 more&quot;'>
            <value>&quot;abridgement&quot;</value>
            <value>&quot;based&quot;</value>
            <value>&quot;from&quot;</value>
            <value>&quot;imitation&quot;</value>
            <value>&quot;plagiarism&quot;</value>
            <value>&quot;plagiarisms&quot;</value>
            <value>&quot;plagiarized&quot;</value>
            <value>&quot;residual&quot;</value>
            <value>&quot;reverberations&quot;</value>
            <value>&quot;source&quot;</value>
            <value>&quot;taken&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;chapbook &amp; Chapbook&quot;'>
            <value>&quot;chapbook&quot;</value>
            <value>&quot;Chapbook&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;CharlotteSmith, CharlotteSmiths, Reeve and 4 more&quot;'>
            <value>&quot;CharlotteSmith&quot;</value>
            <value>&quot;CharlotteSmiths&quot;</value>
            <value>&quot;Reeve&quot;</value>
            <value>&quot;Reeves&quot;</value>
            <value>&quot;Schauerromantik&quot;</value>
            <value>&quot;Shauerromantik&quot;</value>
            <value>&quot;Smiths&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;combined &amp; compilation&quot;'>
            <value>&quot;combined&quot;</value>
            <value>&quot;compilation&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;composite, numerous, several and 1 more&quot;'>
            <value>&quot;composite&quot;</value>
            <value>&quot;numerous&quot;</value>
            <value>&quot;several&quot;</value>
            <value>&quot;various&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;didactic &amp; didactit&quot;'>
            <value>&quot;didactic&quot;</value>
            <value>&quot;didactit&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;German &amp; Germanic&quot;'>
            <value>&quot;German&quot;</value>
            <value>&quot;Germanic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Godwin &amp; Godwins&quot;'>
            <value>&quot;Godwin&quot;</value>
            <value>&quot;Godwins&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;historical &amp; history&quot;'>
            <value>&quot;historical&quot;</value>
            <value>&quot;history&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;ideas &amp; Ideas&quot;'>
            <value>&quot;ideas&quot;</value>
            <value>&quot;Ideas&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Mrs.Radcliffe, Mrs.Radcliffes, THEITALIAN&quot;'>
            <value>&quot;Mrs.Radcliffe&quot;</value>
            <value>&quot;Mrs.Radcliffes&quot;</value>
            <value>&quot;THEITALIAN&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Natural &amp; Naturalized&quot;'>
            <value>&quot;Natural&quot;</value>
            <value>&quot;Naturalized&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;noir &amp; Noir&quot;'>
            <value>&quot;noir&quot;</value>
            <value>&quot;Noir&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;nouvella &amp; novella&quot;'>
            <value>&quot;nouvella&quot;</value>
            <value>&quot;novella&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;parody &amp; Parody&quot;'>
            <value>&quot;parody&quot;</value>
            <value>&quot;Parody&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;pseudohistorical &amp; pseudohistory&quot;'>
            <value>&quot;pseudohistorical&quot;</value>
            <value>&quot;pseudohistory&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pure or high&quot;'>
            <value>&quot;Pure&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Rauberroman, Raüberroman, Rauberromantik&quot;'>
            <value>&quot;Rauberroman&quot;</value>
            <value>&quot;Raüberroman&quot;</value>
            <value>&quot;Rauberromantik&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;recessant &amp; recessive&quot;'>
            <value>&quot;recessant&quot;</value>
            <value>&quot;recessive&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;roman &amp; Roman&quot;'>
            <value>&quot;roman&quot;</value>
            <value>&quot;Roman&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;romance &amp; Romance&quot;'>
            <value>&quot;romance&quot;</value>
            <value>&quot;Romance&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;ruin &amp; Ruin&quot;'>
            <value>&quot;ruin&quot;</value>
            <value>&quot;Ruin&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;satire, satiric, satirizes&quot;'>
            <value>&quot;satire&quot;</value>
            <value>&quot;satiric&quot;</value>
            <value>&quot;satirizes&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Schocker &amp; Shocker&quot;'>
            <value>&quot;Schocker&quot;</value>
            <value>&quot;Shocker&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;terror &amp; terrors&quot;'>
            <value>&quot;terror&quot;</value>
            <value>&quot;terrors&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;title, titling, titular&quot;'>
            <value>&quot;title&quot;</value>
            <value>&quot;titling&quot;</value>
            <value>&quot;titular&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Gothic Type' datatype='string' name='[gothic type]' role='dimension' type='nominal' />
      <column caption='Total F' datatype='integer' name='[total f]' role='measure' type='quantitative' />
      <column caption='Total M' datatype='integer' name='[total m]' role='measure' type='quantitative' />
      <column caption='Total Total' datatype='integer' name='[total total]' role='measure' type='quantitative' />
      <column caption='Total Unk' datatype='integer' name='[total unk]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_10344272412667906]' derivation='Sum' name='[sum:Calculation_10344272412667906:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total f]' derivation='Sum' name='[sum:total f:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total m]' derivation='Sum' name='[sum:total m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total total]' derivation='Sum' name='[sum:total total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total unk]' derivation='Sum' name='[sum:total unk:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.448276' measure-ordering='alphabetic' measure-percentage='0.551724' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Calculation_10344272416002052:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total f:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Calculation_10344272412667906:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Calculation_10344272419790858:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Calculation_10344272416063493:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total unk:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Calculation_10344272412876803:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total m:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total total:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified-types' name='federated.0k3x6gt1ngsolu1f1grie0n65h6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0k3x6gt1ngsolu1f1grie0n65h6h'>
            <column caption='All Total' datatype='integer' name='[Calculation_10344272412667906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total m]+[total f]+[total unk]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Type (rough groups)' datatype='string' name='[Type (identical groups) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[gothic type]' new-bin='true'>
                <bin default-name='true' value='&quot;abridgement, based, from and 8 more&quot;'>
                  <value>&quot;abridgement&quot;</value>
                  <value>&quot;based&quot;</value>
                  <value>&quot;from&quot;</value>
                  <value>&quot;imitation&quot;</value>
                  <value>&quot;plagiarism&quot;</value>
                  <value>&quot;plagiarisms&quot;</value>
                  <value>&quot;plagiarized&quot;</value>
                  <value>&quot;residual&quot;</value>
                  <value>&quot;reverberations&quot;</value>
                  <value>&quot;source&quot;</value>
                  <value>&quot;taken&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;chapbook &amp; Chapbook&quot;'>
                  <value>&quot;chapbook&quot;</value>
                  <value>&quot;Chapbook&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;CharlotteSmith, CharlotteSmiths, Reeve and 4 more&quot;'>
                  <value>&quot;CharlotteSmith&quot;</value>
                  <value>&quot;CharlotteSmiths&quot;</value>
                  <value>&quot;Reeve&quot;</value>
                  <value>&quot;Reeves&quot;</value>
                  <value>&quot;Schauerromantik&quot;</value>
                  <value>&quot;Shauerromantik&quot;</value>
                  <value>&quot;Smiths&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;combined &amp; compilation&quot;'>
                  <value>&quot;combined&quot;</value>
                  <value>&quot;compilation&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;composite, numerous, several and 1 more&quot;'>
                  <value>&quot;composite&quot;</value>
                  <value>&quot;numerous&quot;</value>
                  <value>&quot;several&quot;</value>
                  <value>&quot;various&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;didactic &amp; didactit&quot;'>
                  <value>&quot;didactic&quot;</value>
                  <value>&quot;didactit&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;German &amp; Germanic&quot;'>
                  <value>&quot;German&quot;</value>
                  <value>&quot;Germanic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Godwin &amp; Godwins&quot;'>
                  <value>&quot;Godwin&quot;</value>
                  <value>&quot;Godwins&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;historical &amp; history&quot;'>
                  <value>&quot;historical&quot;</value>
                  <value>&quot;history&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;ideas &amp; Ideas&quot;'>
                  <value>&quot;ideas&quot;</value>
                  <value>&quot;Ideas&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Mrs.Radcliffe, Mrs.Radcliffes, THEITALIAN&quot;'>
                  <value>&quot;Mrs.Radcliffe&quot;</value>
                  <value>&quot;Mrs.Radcliffes&quot;</value>
                  <value>&quot;THEITALIAN&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Natural &amp; Naturalized&quot;'>
                  <value>&quot;Natural&quot;</value>
                  <value>&quot;Naturalized&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;noir &amp; Noir&quot;'>
                  <value>&quot;noir&quot;</value>
                  <value>&quot;Noir&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;nouvella &amp; novella&quot;'>
                  <value>&quot;nouvella&quot;</value>
                  <value>&quot;novella&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;parody &amp; Parody&quot;'>
                  <value>&quot;parody&quot;</value>
                  <value>&quot;Parody&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;pseudohistorical &amp; pseudohistory&quot;'>
                  <value>&quot;pseudohistorical&quot;</value>
                  <value>&quot;pseudohistory&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pure or high&quot;'>
                  <value>&quot;Pure&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Rauberroman, Raüberroman, Rauberromantik&quot;'>
                  <value>&quot;Rauberroman&quot;</value>
                  <value>&quot;Raüberroman&quot;</value>
                  <value>&quot;Rauberromantik&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;recessant &amp; recessive&quot;'>
                  <value>&quot;recessant&quot;</value>
                  <value>&quot;recessive&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;roman &amp; Roman&quot;'>
                  <value>&quot;roman&quot;</value>
                  <value>&quot;Roman&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;romance &amp; Romance&quot;'>
                  <value>&quot;romance&quot;</value>
                  <value>&quot;Romance&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;ruin &amp; Ruin&quot;'>
                  <value>&quot;ruin&quot;</value>
                  <value>&quot;Ruin&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;satire, satiric, satirizes&quot;'>
                  <value>&quot;satire&quot;</value>
                  <value>&quot;satiric&quot;</value>
                  <value>&quot;satirizes&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Schocker &amp; Shocker&quot;'>
                  <value>&quot;Schocker&quot;</value>
                  <value>&quot;Shocker&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;terror &amp; terrors&quot;'>
                  <value>&quot;terror&quot;</value>
                  <value>&quot;terrors&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;title, titling, titular&quot;'>
                  <value>&quot;title&quot;</value>
                  <value>&quot;titling&quot;</value>
                  <value>&quot;titular&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Gothic Type' datatype='string' name='[gothic type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_10344272412667906]' derivation='Sum' name='[sum:Calculation_10344272412667906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total f]' derivation='Sum' name='[sum:total f:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total m]' derivation='Sum' name='[sum:total m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total total]' derivation='Sum' name='[sum:total total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total unk]' derivation='Sum' name='[sum:total unk:qk]' pivot='key' type='quantitative' />
            <column caption='Total F' datatype='integer' name='[total f]' role='measure' type='quantitative' />
            <column caption='Total M' datatype='integer' name='[total m]' role='measure' type='quantitative' />
            <column caption='Total Total' datatype='integer' name='[total total]' role='measure' type='quantitative' />
            <column caption='Total Unk' datatype='integer' name='[total unk]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Calculation_10344272412667906:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:Number of Records:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total total:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total unk:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total f:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total m:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Type (identical groups) (copy)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;1753&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;1798&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;1835&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;a&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;gothic&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;has&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;heavily&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;high&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;highly&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;in&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;is&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;its&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;key&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;main&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;mild&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;minimal&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;more&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;no&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;only&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;puzzlements&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;the&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Type (identical groups) (copy)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;five&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;to&quot;' />
                <groupfilter function='member' level='[Type (identical groups) (copy)]' member='&quot;under&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Pure or high&quot;</bucket>
              <bucket>&quot;terror &amp; terrors&quot;</bucket>
              <bucket>&quot;abridgement, based, from and 8 more&quot;</bucket>
              <bucket>&quot;Gothified&quot;</bucket>
              <bucket>&quot;chapbook &amp; Chapbook&quot;</bucket>
              <bucket>&quot;historical &amp; history&quot;</bucket>
              <bucket>&quot;horror&quot;</bucket>
              <bucket>&quot;CharlotteSmith, CharlotteSmiths, Reeve and 4 more&quot;</bucket>
              <bucket>&quot;modes&quot;</bucket>
              <bucket>&quot;numerous, several, various&quot;</bucket>
              <bucket>&quot;composite&quot;</bucket>
              <bucket>&quot;sentimental&quot;</bucket>
              <bucket>&quot;bluebook&quot;</bucket>
              <bucket>&quot;domestic&quot;</bucket>
              <bucket>&quot;romance &amp; Romance&quot;</bucket>
              <bucket>&quot;parody &amp; Parody&quot;</bucket>
              <bucket>&quot;didactic &amp; didactit&quot;</bucket>
              <bucket>&quot;Rauberroman, Raüberroman, Rauberromantik&quot;</bucket>
              <bucket>&quot;ruin &amp; Ruin&quot;</bucket>
              <bucket>&quot;supernatural&quot;</bucket>
              <bucket>&quot;Grotto&quot;</bucket>
              <bucket>&quot;satire, satiric, satirizes&quot;</bucket>
              <bucket>&quot;German &amp; Germanic&quot;</bucket>
              <bucket>&quot;Gothics&quot;</bucket>
              <bucket>&quot;Mrs.Radcliffe &amp; Mrs.Radcliffes&quot;</bucket>
              <bucket>&quot;THEITALIAN&quot;</bucket>
              <bucket>&quot;Orientalized&quot;</bucket>
              <bucket>&quot;scenery&quot;</bucket>
              <bucket>&quot;title, titling, titular&quot;</bucket>
              <bucket>&quot;characterization&quot;</bucket>
              <bucket>&quot;characters&quot;</bucket>
              <bucket>&quot;effects&quot;</bucket>
              <bucket>&quot;episodes&quot;</bucket>
              <bucket>&quot;natural&quot;</bucket>
              <bucket>&quot;roman &amp; Roman&quot;</bucket>
              <bucket>&quot;sham&quot;</bucket>
              <bucket>&quot;uses&quot;</bucket>
              <bucket>&quot;combined &amp; compilation&quot;</bucket>
              <bucket>&quot;French&quot;</bucket>
              <bucket>&quot;motif&quot;</bucket>
              <bucket>&quot;novels&quot;</bucket>
              <bucket>&quot;Political&quot;</bucket>
              <bucket>&quot;prominent&quot;</bucket>
              <bucket>&quot;character&quot;</bucket>
              <bucket>&quot;clef&quot;</bucket>
              <bucket>&quot;components&quot;</bucket>
              <bucket>&quot;echoes&quot;</bucket>
              <bucket>&quot;emergent&quot;</bucket>
              <bucket>&quot;few&quot;</bucket>
              <bucket>&quot;format&quot;</bucket>
              <bucket>&quot;Godwin &amp; Godwins&quot;</bucket>
              <bucket>&quot;horrific&quot;</bucket>
              <bucket>&quot;ideas &amp; Ideas&quot;</bucket>
              <bucket>&quot;Irelands&quot;</bucket>
              <bucket>&quot;legend&quot;</bucket>
              <bucket>&quot;many&quot;</bucket>
              <bucket>&quot;Natural &amp; Naturalized&quot;</bucket>
              <bucket>&quot;noir &amp; Noir&quot;</bucket>
              <bucket>&quot;nouvella &amp; novella&quot;</bucket>
              <bucket>&quot;Novel&quot;</bucket>
              <bucket>&quot;periodic&quot;</bucket>
              <bucket>&quot;picaresque&quot;</bucket>
              <bucket>&quot;prototype&quot;</bucket>
              <bucket>&quot;pseudohistorical &amp; pseudohistory&quot;</bucket>
              <bucket>&quot;Quest&quot;</bucket>
              <bucket>&quot;Schocker &amp; Shocker&quot;</bucket>
              <bucket>&quot;science&quot;</bucket>
              <bucket>&quot;secret&quot;</bucket>
              <bucket>&quot;Shakespearean&quot;</bucket>
              <bucket>&quot;situations&quot;</bucket>
              <bucket>&quot;spectral&quot;</bucket>
              <bucket>&quot;THERECESS&quot;</bucket>
              <bucket>&quot;to&quot;</bucket>
              <bucket>&quot;Tower&quot;</bucket>
              <bucket>&quot;verse&quot;</bucket>
              <bucket>&quot;villain&quot;</bucket>
              <bucket>&quot;ABBESS&quot;</bucket>
              <bucket>&quot;aborted&quot;</bucket>
              <bucket>&quot;actually&quot;</bucket>
              <bucket>&quot;all&quot;</bucket>
              <bucket>&quot;anticipates&quot;</bucket>
              <bucket>&quot;Apocalyptic&quot;</bucket>
              <bucket>&quot;apparitional&quot;</bucket>
              <bucket>&quot;appearances&quot;</bucket>
              <bucket>&quot;architecture&quot;</bucket>
              <bucket>&quot;artificial&quot;</bucket>
              <bucket>&quot;attitudes&quot;</bucket>
              <bucket>&quot;authentic&quot;</bucket>
              <bucket>&quot;caricature&quot;</bucket>
              <bucket>&quot;cases&quot;</bucket>
              <bucket>&quot;castle&quot;</bucket>
              <bucket>&quot;categorized&quot;</bucket>
              <bucket>&quot;chapters&quot;</bucket>
              <bucket>&quot;compressed&quot;</bucket>
              <bucket>&quot;containing&quot;</bucket>
              <bucket>&quot;Contemporized&quot;</bucket>
              <bucket>&quot;Didactic&quot;</bucket>
              <bucket>&quot;Diderots&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Doppleganger&quot;</bucket>
              <bucket>&quot;early&quot;</bucket>
              <bucket>&quot;entanglements&quot;</bucket>
              <bucket>&quot;essays&quot;</bucket>
              <bucket>&quot;excessive&quot;</bucket>
              <bucket>&quot;explained&quot;</bucket>
              <bucket>&quot;family&quot;</bucket>
              <bucket>&quot;father&quot;</bucket>
              <bucket>&quot;feelings&quot;</bucket>
              <bucket>&quot;FehmicCourt&quot;</bucket>
              <bucket>&quot;Fiction&quot;</bucket>
              <bucket>&quot;five&quot;</bucket>
              <bucket>&quot;free&quot;</bucket>
              <bucket>&quot;fusion&quot;</bucket>
              <bucket>&quot;futuristic&quot;</bucket>
              <bucket>&quot;incident&quot;</bucket>
              <bucket>&quot;influences&quot;</bucket>
              <bucket>&quot;Jacobin&quot;</bucket>
              <bucket>&quot;JohnMoores&quot;</bucket>
              <bucket>&quot;journalistic&quot;</bucket>
              <bucket>&quot;LARELIGIEUSE&quot;</bucket>
              <bucket>&quot;Lathoms&quot;</bucket>
              <bucket>&quot;Lebrun&quot;</bucket>
              <bucket>&quot;Lewisite&quot;</bucket>
              <bucket>&quot;loathsome&quot;</bucket>
              <bucket>&quot;locale&quot;</bucket>
              <bucket>&quot;LONGSWORD&quot;</bucket>
              <bucket>&quot;Macbethian&quot;</bucket>
              <bucket>&quot;Mackenzies&quot;</bucket>
              <bucket>&quot;Maturins&quot;</bucket>
              <bucket>&quot;monster&quot;</bucket>
              <bucket>&quot;mysterious&quot;</bucket>
              <bucket>&quot;mystery&quot;</bucket>
              <bucket>&quot;nationalistic&quot;</bucket>
              <bucket>&quot;nature&quot;</bucket>
              <bucket>&quot;novelette&quot;</bucket>
              <bucket>&quot;novelists&quot;</bucket>
              <bucket>&quot;persecuted&quot;</bucket>
              <bucket>&quot;Pigault&quot;</bucket>
              <bucket>&quot;pleasures&quot;</bucket>
              <bucket>&quot;preGothic&quot;</bucket>
              <bucket>&quot;primitive&quot;</bucket>
              <bucket>&quot;principal&quot;</bucket>
              <bucket>&quot;procedures&quot;</bucket>
              <bucket>&quot;props&quot;</bucket>
              <bucket>&quot;prose&quot;</bucket>
              <bucket>&quot;prototypical&quot;</bucket>
              <bucket>&quot;quest&quot;</bucket>
              <bucket>&quot;recessant&quot;</bucket>
              <bucket>&quot;recessive&quot;</bucket>
              <bucket>&quot;represented&quot;</bucket>
              <bucket>&quot;Revolution&quot;</bucket>
              <bucket>&quot;Richardsonian&quot;</bucket>
              <bucket>&quot;Rochean&quot;</bucket>
              <bucket>&quot;sadism&quot;</bucket>
              <bucket>&quot;saga&quot;</bucket>
              <bucket>&quot;search&quot;</bucket>
              <bucket>&quot;Seduction&quot;</bucket>
              <bucket>&quot;serialized&quot;</bucket>
              <bucket>&quot;settings&quot;</bucket>
              <bucket>&quot;Shelleys&quot;</bucket>
              <bucket>&quot;short&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;Sorcerer&quot;</bucket>
              <bucket>&quot;Spenserian&quot;</bucket>
              <bucket>&quot;straight&quot;</bucket>
              <bucket>&quot;strains&quot;</bucket>
              <bucket>&quot;sublime&quot;</bucket>
              <bucket>&quot;subplots&quot;</bucket>
              <bucket>&quot;subspecies&quot;</bucket>
              <bucket>&quot;Tale&quot;</bucket>
              <bucket>&quot;technical&quot;</bucket>
              <bucket>&quot;THEHEROINE&quot;</bucket>
              <bucket>&quot;theme&quot;</bucket>
              <bucket>&quot;thrillers&quot;</bucket>
              <bucket>&quot;touches&quot;</bucket>
              <bucket>&quot;transformation&quot;</bucket>
              <bucket>&quot;translations&quot;</bucket>
              <bucket>&quot;tribunal&quot;</bucket>
              <bucket>&quot;twin&quot;</bucket>
              <bucket>&quot;types&quot;</bucket>
              <bucket>&quot;tyrant&quot;</bucket>
              <bucket>&quot;under&quot;</bucket>
              <bucket>&quot;varieties&quot;</bucket>
              <bucket>&quot;visitations&quot;</bucket>
              <bucket>&quot;Walpole&quot;</bucket>
              <bucket>&quot;WanderingJew&quot;</bucket>
              <bucket>&quot;ZELUCO&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;counterfeit&quot;</bucket>
              <bucket>&quot;OLDENGLISHBARON&quot;</bucket>
              <bucket>&quot;reductions&quot;</bucket>
              <bucket>&quot;Mrs.Radcliffe, Mrs.Radcliffes, THEITALIAN&quot;</bucket>
              <bucket>&quot;recessant &amp; recessive&quot;</bucket>
              <bucket>&quot;composite, numerous, several and 1 more&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]</column>
            <column>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]' value='122' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]</rows>
        <cols>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='chapbooks'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified-types' name='federated.0k3x6gt1ngsolu1f1grie0n65h6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0k3x6gt1ngsolu1f1grie0n65h6h'>
            <column caption='Type (identical groups)' datatype='string' name='[Gothic Type (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[gothic type]' new-bin='true'>
                <bin default-name='true' value='&quot;chapbook &amp; Chapbook&quot;'>
                  <value>&quot;chapbook&quot;</value>
                  <value>&quot;Chapbook&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;CharlotteSmith, CharlotteSmiths, Reeve and 4 more&quot;'>
                  <value>&quot;CharlotteSmith&quot;</value>
                  <value>&quot;CharlotteSmiths&quot;</value>
                  <value>&quot;Reeve&quot;</value>
                  <value>&quot;Reeves&quot;</value>
                  <value>&quot;Schauerromantik&quot;</value>
                  <value>&quot;Shauerromantik&quot;</value>
                  <value>&quot;Smiths&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;didactic &amp; didactit&quot;'>
                  <value>&quot;didactic&quot;</value>
                  <value>&quot;didactit&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;German &amp; Germanic&quot;'>
                  <value>&quot;German&quot;</value>
                  <value>&quot;Germanic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Godwin &amp; Godwins&quot;'>
                  <value>&quot;Godwin&quot;</value>
                  <value>&quot;Godwins&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;historical &amp; history&quot;'>
                  <value>&quot;historical&quot;</value>
                  <value>&quot;history&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;ideas &amp; Ideas&quot;'>
                  <value>&quot;ideas&quot;</value>
                  <value>&quot;Ideas&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Mrs.Radcliffe &amp; Mrs.Radcliffes&quot;'>
                  <value>&quot;Mrs.Radcliffe&quot;</value>
                  <value>&quot;Mrs.Radcliffes&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;noir &amp; Noir&quot;'>
                  <value>&quot;noir&quot;</value>
                  <value>&quot;Noir&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;nouvella &amp; novella&quot;'>
                  <value>&quot;nouvella&quot;</value>
                  <value>&quot;novella&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;pseudohistorical &amp; pseudohistory&quot;'>
                  <value>&quot;pseudohistorical&quot;</value>
                  <value>&quot;pseudohistory&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Rauberroman, Raüberroman, Rauberromantik&quot;'>
                  <value>&quot;Rauberroman&quot;</value>
                  <value>&quot;Raüberroman&quot;</value>
                  <value>&quot;Rauberromantik&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Schocker &amp; Shocker&quot;'>
                  <value>&quot;Schocker&quot;</value>
                  <value>&quot;Shocker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Gothic Type' datatype='string' name='[gothic type]' role='dimension' type='nominal' />
            <column-instance column='[total f]' derivation='Sum' name='[sum:total f:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total m]' derivation='Sum' name='[sum:total m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total unk]' derivation='Sum' name='[sum:total unk:qk]' pivot='key' type='quantitative' />
            <column caption='Total F' datatype='integer' name='[total f]' role='measure' type='quantitative' />
            <column caption='Total M' datatype='integer' name='[total m]' role='measure' type='quantitative' />
            <column caption='Total Unk' datatype='integer' name='[total unk]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total f:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total m:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total unk:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Gothic Type (group)]'>
            <groupfilter function='member' level='[Gothic Type (group)]' member='&quot;chapbook &amp; Chapbook&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Gothic Type (group)]</column>
            <column>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Gothic Type (group)] / [federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names])</rows>
        <cols>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Multiple Values]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Type (identical groups) (copy)]</field>
                  <field>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]</field>
                  <field>[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;transformation&quot;</value>
                <value>&quot;[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[sum:total total:qk]&quot;</value>
                <value>1.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='chapbooks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k3x6gt1ngsolu1f1grie0n65h6h].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      GN9aR820PTlsZmR9iJckIcsS03bcmWvuvIXuNe0c8+UjufTa31BOt5OxPcz9wYn87vfn8fPV
      i+hc3cbUQ8ROP5o5jo1hGITCEWzTwFZUZEUGJLz+EBHbpVAs0dDUhCyuAAZJkkxDYxOZbBZZ
      8xGNBMG2UGQZSZJpbGwkm82hegNEwoGt3d1tiqyoNDbWkcsXCERqCHg1LMOpHJ9Ujab6WvKF
      AuGaOnze6kmgHTYKolTa8DEw2zKxXQmPVqkXplEmny/i8fkJ+D2c972TOeXS6xhXHyESCuI6
      Nqbt4vVUNoRjW2SzWWTVQygYxHUs0uk0suqlJhoGXHLZLA4SoWAIWXIH/17Xy6iaF1lyyWYy
      yJqXcMBPqVSgpJsEAkG8Ho1SIU9BN4kEAyiaB1WpmgecBEEQtooRFYCP5/DYA/ez/9HH0RAS
      AXGCIAjV4jMoAIIgCEI1GrYA2LZYQSkIgjDaiThoQRCE7ZS4UyoIgrCd2qIFwLZMynp1hSUJ
      2ybHrjxJtslCX9cll0nT29tHSYy1TbiuS6mQp1jWN2mzDJ3+vj6SqYy4BzgMvVSkr7eXTC6/
      SRhcuVigt7eX7JB8pWowogLQ/+Fizj33XM4991yuv/W3xDP5T/WfLXnzWe7927xh21YvX8zy
      VV0AtC9/iwsuvXGDlYqCsI5ZLrKmvYO+3r5NxkgxnyGRKRAJB+jq7MQWURBDuPT3dNHd20s2
      V9iwxXXo6urCGwhiFDMkPuU+Plo5tklXdy+hcIRMIka+tL6AOpZOZ3cfkUiEVKyHQhVlkY2o
      AOjZfhIllR+e+QOIr+Ce++fhOjbvLVzAP59+llg6T2f7KvoTWXBdOlZ9SCpbItnbydP/fIq3
      Fi/DcV1MU6dQKlHOpWlr7wZcOttWEovFefLhB/nT/Y+yZNkK6lsn8tWjDkEGYj0dPPXUPN5Z
      8gEu0NvVzoqVbbz04gss+7BdrFjfDimal4kTJxLwbbrgJp/P09jUSCAYJhrQKJSrJ5dlS6hr
      bKa1qX6TnzuWgaT6iYZDNDQ2UciLAjCUUSzgj9QSDAZoaqwjn1u/fYqFPJG6egKBAI31teTy
      hY/5pG3LiKeA/IEoEydNYvKYVsolg9effYQb7v4ra1cuYu6V17P4tWf47QNP4Lo2V1/8Czr6
      +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
      EgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='278' name='chapbooks' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAEWCAYAAABv+EDhAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3df3Cb9YHn8XcPEUcOWMGsg01jhFkEeE3NygUtuL6EJB3swVdzyW4zhmk2
      S003uUmbC3NOSIOZupBLIXUPLz3vxLt4uln2vKxb4m1u3LUZUtdZNbhuiCYB14DYBJG0Fvhw
      IgdLEXkyuT8k/5b8Q3YiJ8/nNZOZWHqeR189tr6f5/vr0RcuXrx4ERERMZ3/lOwCiIhIcigA
      RERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoA
      ERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJA
      RMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQ
      ETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBE
      RExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAR
      EZNSAIiImJQCQETEpBQAIiImZZntAQ4fPjwX5RARkcvsCxcvXryY7EKIiFyJDh8+zL333pvs
      YiRMXUAiIialABARMSkFgIiISSkARERMatazgEREzOyRHa8muwgJUwtARMSkFAAiIiZ1ZQRA
      uJeO/a309IWTXZLJqZwicgW5IsYAvC17aGzzU3RrIbkZKckuTlxmLafR72V/08856PESGnrQ
      molr5SM8WlZA6qxfQUQuhSujBUCkkrr22iQXY0rmK6fRd4jK79bQNlT5W61YAUJ+ulrqefJ7
      +xmY/ctIHEZ/D63793Oopy/ZRZEr0BXRApD5Kswbf783UvHbnGx68jHys9IAg5Nd+/lRQxsh
      fws/PVJERUF6kssa0XuklTfeP8O0s+883PbV1biy5meL7vOPj9Lc0o616FYKczOm3H467/88
      i/nq6hLm6VuWOaQAkMQZ/XzoA7BRsX0j+cN1vIVs1xr+e/9xnm/28t77H8M8CYAz3a243aGp
      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
      5Aebg6KCpXDmOO6h7wawl/LDHWWkJa+IgAJAROSS6Duyj/9Z3zZhTZjNuZaqjauSXvmDAkBE
      5NIJ99PT/QHnrTdgnD3N9dl34ciaD1V/hAJARMSkNAgsImJSCgAREZNSAIiImJQCQETEpBQA
      IiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWA
      iIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEg
      ImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCI
      iJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAi
      IialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCI
      iEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKT+PxbzQ9lNCIRWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
